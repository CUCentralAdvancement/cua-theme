{#
/**
 * @file
 * Default theme implementation to display a block.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values.
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - content: The content of this block.
 * - attributes: Array of HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template.
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main content
 *   tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @see template_preprocess_block()
 *
 * @ingroup themeable
 */
#}

{# Attach the required library for the accordion functionality. #}
{{ attach_library('cua_theme/accordion') }}

{# Set container classes dynamically based on configuration #}
{% set accordion_classes = [
    'block',
    'block-' ~ configuration.provider|clean_class,
    'block-' ~ plugin_id|clean_class,
    'accordion',
    id ? 'block--' ~ id|replace({"_": "-"})|clean_class : null,
] | merge(utility_classes ? utility_classes : []) | filter(v => v) | join(' ') %}

{# Generate unique ID #}
{% set unique_id = 'block--node-' ~ '-accordion' ~ '--' ~ elements.content['#block_content'].id()|replace({"_": "-", ":": "--"}) %}

{# Render content #}
<div{{ attributes|without('id').setAttribute('id', unique_id).addClass(basic_classes).setAttribute('role', 'region') }}>

    {# Render Title (Wrapped in H3) #}
    {% import '@cua_theme/component/macros/card_title.html.twig' as titleMacros %}
    {{ titleMacros.render_title(
        label,
        title_prefix,
        title_suffix,
    ) }}

    {% block content %}
        <div{{ content_attributes.addClass('content') }}>
            {{ content }}
        </div>
    {% endblock %}

</div>