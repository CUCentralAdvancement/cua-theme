{#
/**
 * @file
 * Default theme implementation to display a block.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values.
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - content: The content of this block.
 * - attributes: Array of HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template.
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main content
 *   tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @see template_preprocess_block()
 *
 * @ingroup themeable
 */
#}

{# Define CSS classes for the block container. #}
{%
    set classes = [
    'block',
    'block-' ~ configuration.provider|clean_class,
    'block-' ~ plugin_id|clean_class,
]
%}

{# Attach the required library for the accordion functionality. #}
{{ attach_library('cua_theme/accordion') }}

<div{{ attributes.addClass(classes) }}>

    {# Render any additional content before the title. #}
    {{ title_prefix }}

    {# Render the block's label if it's available. #}
    {% if label %}
        <h2{{ title_attributes }}>{{ label }}</h2>
    {% endif %}

    {# Render any additional content after the title. #}
    {{ title_suffix }}

    {# Main content block. This can be overridden in child templates. #}
    {% block content %}
        <div{{ content_attributes.addClass('content') }}>
            {{ content }}
        </div>
    {% endblock %}

</div>