{#
/**
 * @file
 * Template for the Accordion component.
 *
 * Bootstrap Documentation
 * https://getbootstrap.com/docs/5.3
 *
 * Full List Utility Classes
 * https://github.com/twbs/bootstrap/blob/v5.3.0/dist/css/bootstrap.css#L5360
 */
#}

{# Attach the required library for the accordion functionality. #}
{{ attach_library('cua_theme/accordion') }}

{# Set container classes dynamically based on configuration. #}
{% set accordion_classes = [
    'block',
    'block-' ~ configuration.provider|clean_class,
    'block-' ~ plugin_id|clean_class,
    'accordion',
    id ? 'block--' ~ id|replace({"_": "-"})|clean_class : null,
]|merge(utility_classes ? utility_classes : [])|filter(v => v)|join(' ') %}

{# Generate unique ID and an associated aria-labelledby ID for accessibility. #}
{% set unique_id = 'block--node-' ~ '-accordion' ~ '--' ~ elements.content['#block_content'].id()|replace({"_": "-", ":": "--"}) %}
{% set labelledby_id = unique_id ~ '--label' %}

{# Render accordion wrapper with role and accessibility bindings. #}
<div{{ attributes
|without('id')
    .setAttribute('id', unique_id)
    .addClass(accordion_classes)
    .setAttribute('role', 'region')
    .setAttribute('aria-labelledby', labelledby_id)
}}>

    {# Render Title, if present. #}
    {% if label is not empty %}
        {{ title_prefix ?: '' }}
        <h2 id="{{ labelledby_id }}">{{ label }}</h2>
        {{ title_suffix ?: '' }}
    {% else %}
        {{ title_prefix ?: '' }}
        {{ label }}
        {{ title_suffix ?: '' }}
    {% endif %}

    {# Render Block Content. #}
    {% block content %}
        <div{{ content_attributes.addClass('content') }}>
            {{ content }}
        </div>
    {% endblock %}

</div>